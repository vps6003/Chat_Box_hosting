{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/containers/chat/chat.component.ts","webpack:///src/app/containers/chat/chat.component.html","webpack:///src/app/components/usernname/usernname.component.ts","webpack:///src/app/components/usernname/usernname.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","title","AppModule","ChatComponent","userName","message","messageList","userList","name","socket","emit","on","data","push","mine","sendMessage","UsernnameComponent","userNameEvent","prompt","setUserName","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import  {  Component  }  from  '@angular/core';\r\n\r\n@Component({\r\n    selector:  'app-root',\r\n    templateUrl:  './app.component.html',\r\n    styleUrls:  ['./app.component.scss']\r\n})\r\nexport  class  AppComponent  {\r\n    title  =  'client';\r\n}\r\n","<app-chat></app-chat>  \r\n","import  {  NgModule  }  from  '@angular/core';\r\nimport  {  BrowserModule  }  from  '@angular/platform-browser';\r\nimport  {  FormsModule  }  from  '@angular/forms';\r\n\r\nimport  {  AppComponent  }  from  './app.component';\r\nimport  {  ChatComponent  }  from  './containers/chat/chat.component';\r\nimport  {  UsernnameComponent  }  from  './components/usernname/usernname.component';\r\n\r\n@NgModule({\r\n    declarations:  [\r\n        AppComponent,\r\n        ChatComponent,\r\n        UsernnameComponent\r\n    ],\r\n    imports:  [\r\n        BrowserModule,\r\n        FormsModule\r\n    ],\r\n    providers:  [],\r\n    bootstrap:  [AppComponent]\r\n})\r\nexport  class  AppModule  {  }\r\n","import  {  Component,  OnInit  }  from  '@angular/core';\r\nimport  *  as  io  from  'socket.io-client';\r\n\r\n@Component({\r\n    selector:  'app-chat',\r\n    templateUrl:  './chat.component.html',\r\n    styleUrls:  ['./chat.component.scss']\r\n})\r\nexport  class  ChatComponent  {\r\n    userName  =  '';\r\n    message  =  '';\r\n    messageList:  {message:  string,  userName:  string,  mine:  boolean}[]  =  [];\r\n    userList:  string[]  =  [];\r\n    socket:  any;\r\n\r\n    constructor()  {  }\r\n\r\n    userNameUpdate(name:  string):  void  {\r\n        this.socket = io.io(`https://chat-server-hosting.herokuapp.com/?userName=${name}`);\r\n\r\n        this.userName  =  name;\r\n\r\n        this.socket.emit('set-user-name',  name);\r\n\r\n        this.socket.on('user-list',  (userList:  string[])  =>  {\r\n            this.userList  =  userList;\r\n        });\r\n\r\n        this.socket.on('message-broadcast',  (data:  {message:  string,  userName:  string})  =>  {\r\n            if  (data)  {\r\n                this.messageList.push({message:  data.message,  userName:  data.userName,  mine:  false});\r\n            }\r\n        });\r\n    }\r\n\r\n    sendMessage():  void  {\r\n        this.socket.emit('message',  this.message);\r\n        this.messageList.push({message:  this.message,  userName:  this.userName,  mine:  true});\r\n        this.message  =  '';\r\n    }\r\n\r\n}\r\n","<div  class=\"container\">\r\n    <h1>VPS  Domain</h1>\r\n    <app-usernname  (userNameEvent)=\"userNameUpdate($event)\"  *ngIf=\"!userName\"></app-usernname>\r\n    <div class = \"userName\">{{userName}}</div>\r\n    <div  class=\"chatbox\">        \r\n        <div  class=\"chatbox__user-list\">\r\n            <h2>User  list</h2>\r\n            <div  class=\"chatbox__user--active\"  *ngFor=\"let  user  of  userList\"  >\r\n                <p>{{  user  }}</p>\r\n            </div>\r\n        </div>\r\n        <div  class=\"messages_list\">\r\n            <div  class=\"chatbox__messages\"  *ngFor=\"let  msg  of  messageList\"  [ngClass]=\"{mine:  msg.mine}\">\r\n                <div  class=\"user-message\">\r\n                    <div  class=\"message-box\">\r\n                        <p  class=\"name\">{{  msg.userName  }}</p>\r\n                        <br/>\r\n                        <p  class=\"message\">{{  msg.message  }}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div  class=\"send-message\">\r\n        <input  type=\"text\"  [(ngModel)]=\"message\"  name=\"chatArea\"  placeholder=\"Enter  Text\">\r\n        <button  (click)=\"sendMessage()\">Send</button>\r\n    </div>\r\n</div>\r\n","import  {  Component,  Output,  EventEmitter  }  from  '@angular/core';\r\n\r\n@Component({\r\n    selector:  'app-usernname',\r\n    templateUrl:  './usernname.component.html',\r\n    styleUrls:  ['./usernname.component.scss']\r\n})\r\nexport  class  UsernnameComponent  {\r\n    @Output()  userNameEvent  =  new  EventEmitter<string>();\r\n    userName :any ='';\r\n    name:any = () =>{\r\n    this.userName = prompt(\"Enter Name\");\r\n    this.setUserName();\r\n    }\r\n\r\n\r\n    constructor()  {  }\r\n    ngOnInit() :void {\r\n        this.name();\r\n    }\r\n\r\n    setUserName():  void  {\r\n        this.userNameEvent.emit(this.userName);\r\n    }\r\n\r\n}\r\n","<div class=\"NamerX\">  \r\n  <!-- <input type=\"text\" [(ngModel)]=\"userName\" placeholder=\"Enter Text\"> \r\n  <button (click)=\"setUserName()\" > Set username</button>  -->\r\n</div> \r\n","import  {  enableProdMode  }  from  '@angular/core';\r\nimport  {  platformBrowserDynamic  }  from  '@angular/platform-browser-dynamic';\r\n\r\nimport  {  AppModule  }  from  './app/app.module';\r\nimport  {  environment  }  from  './environments/environment';\r\n \r\nif  (environment.production)  {\r\n    enableProdMode();\r\n} \r\n \r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err  =>  console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}